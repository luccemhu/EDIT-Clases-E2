tablag = aggregate(data = hsb,
h3,
FUN = shapInfo)
# para que se vea mejor:
shapiroTable = tablag[, 1] # columna 1
WandPval = as.data.frame(tablag[, 2]) # columnas 2 y 3
shapiroTable = cbind(shapiroTable, WandPval) # todo junto
names(shapiroTable)[c(1, 3)] = c("SEX", "Pval") # cambia nombre de 1 y 2da columna
kable(shapiroTable)  |>
kable_styling()
# Asimétricas, correlacionadas pero ninguna es V.D. o V.I:
f1 = formula( ~ MATH + WRTG)
# camino parametrico:
# (a través de ciertas pruebas, se asume correlacion lineal, es decir,
# las variables presentan disitribución normal)
pearsonf1 = cor.test(f1, data = hsb)[c('estimate', 'p.value')]
pearsonf1
# el coeficiente de Pearson 0.6326664 (con p-value= 0).
# camino no parametrico: (Calcula de la corrleacion en general)
spearmanf1 = cor.test(f1, data = hsb,
method = 'spearman')[c('estimate', 'p.value')]
spearmanf1
# Spearman:0.6415126 (con p-value= 0).
base + geom_point(aes(color = SCI)) + facet_grid( ~ SEX)
paleta <- c("coral1", "cyan")
colors <- paleta[as.numeric(hsb$SEX)]
library(scatterplot3d)
scatterplot3d(hsb[, c('SCI', 'WRTG', 'MATH')], color = colors)
library(knitr)
library(kableExtra)
f3 = formula(MATH ~ SEX)
tablag = aggregate(f3,
hsb,
FUN = function(x) {y <- shapiro.test(x);
c(y$statistic, y$p.value)})
# para que se vea mejor:
shapiroTest = as.data.frame(tablag[, 2])
names(shapiroTest) = c("W", "Prob")
kable(cbind(tablag[1], shapiroTest)) %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = F,
position = "left"
)
# Gráfica de correlación: (2 dimensiones)
library(ggplot2)
base = ggplot(data = hsb, aes(x = WRTG, y = MATH))
base + geom_point() # Hay aparente relación:
tf3=t.test(f3,data=hsb)[c('estimate','p.value')]
wilcoxf3=wilcox.test(f3,data=hsb)['p.value']
wilcoxf3
tf3
# No se rechazaría la igualdad de valores medios
# (Mann-Whitney con p valor = 0.3085543).
wilcoxf3
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(rio) # Importamos la data:
hsb = import("https://github.com/luccemhu/EDIT-Clases-E2/raw/main/SESI%C3%93N%201/hsb_ok.xlsx")
#str(hsb) # Tipos de datos reconocidos por R, ya que...
# Todo software lee la data a su modo y no siempre es la que se necesita.
# Por ello, debemos saber qué significa cada columna, su valor, etc.
# Para ello, es importante el codebook o diccionario de datos o metadata
# o el manual metodológico, etc. (Indicarlo en el trabajo).
# Formateamos:
categoricals = c("SEX", "RACE", "SES", "SCTYP", "HSP", "CAR")
hsb[, categoricals] = lapply(hsb[, categoricals], as.factor) # A factor
# nominales
hsb$SEX = factor(hsb$SEX,
levels = c(1, 2),
labels = c("Male", "Female"))
hsb$RACE = factor(hsb$RACE,
levels = c(1, 2, 3, 4),
labels = c("Hispanic", "Asian", "Black", "White"))
hsb$HSP = factor(hsb$HSP,
levels = c(1, 2, 3),
labels = c("General", "Academic", "Vocational"))
hsb$SCTYP = factor(hsb$SCTYP,
levels = c(1, 2),
labels = c("Public", "Private"))
# a ordinal:
hsb$SES = ordered(hsb$SES,
levels = c(1, 2, 3),
labels = c("Low", "Medium", "High"))
#hsb #Ahora veamos la data formateada
# Gráfica de correlación: (2 dimensiones)
library(ggplot2)
base = ggplot(data = hsb, aes(x = WRTG, y = MATH))
base + geom_point() # Hay aparente relación:
# Gráfica:
base = ggplot(data = hsb, aes(x = SEX, y = MATH))
base + geom_boxplot(notch = T) +  geom_jitter(color = "black",
size = 0.4,
alpha = 0.9)
# Parece no haber diferencia sustantiva entre hombres y mujeres en
# cuanto a su desempeño en MATH:
library(ggpubr)
ggerrorplot(data = hsb, x = "SEX", y = "MATH")
ggplot(hsb, aes(x = MATH)) +
geom_histogram(aes(y = ..density..), bins = 20, fill = 'green') +
stat_function(fun = dnorm,
colour = "red",
args = list(mean = mean(hsb$MATH, na.rm = TRUE),
sd = sd(hsb$MATH, na.rm = TRUE))) +
facet_grid( ~ SEX) +
coord_flip()
# Los histogramas de la data real tienen encima la curva normal que idealmente tendría esa data. La lejanía entre ellos, sugeriría no normalidad.
# Female distribución multimodal (puede afectar la diferencia de grupos)
# Se sugiere normalidad si los puntos no se alejan de la diagonal.
ggqqplot(data = hsb, x = "MATH") + facet_grid(. ~ SEX)
library(knitr)
library(kableExtra)
f3 = formula(MATH ~ SEX)
tablag = aggregate(f3,
hsb,
FUN = function(x) {y <- shapiro.test(x);
c(y$statistic, y$p.value)})
# para que se vea mejor:
shapiroTest = as.data.frame(tablag[, 2])
names(shapiroTest) = c("W", "Prob")
kable(cbind(tablag[1], shapiroTest)) |>
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = F,
position = "left")
# Tstudent: se utiliza cuando hay normalidad
# Prob: es el pvalue y ambas son significativas (menores a 0.05) para Shapiro (parametrico)
# En suma, no hay normalidad:
# Prueba t:
#tf3=t.test(f3,data=hsb)[c('estimate','p.value')]
#tf3
# Corresponde realizar la prueba no paramétrica:
wilcoxf3=wilcox.test(f3,data=hsb)['p.value']
# No se rechazaría la igualdad de valores medios
# (Mann-Whitney con p valor = 0.3085543).
#wilcoxf3
base = ggplot(data = hsb, aes(x = WRTG, y = MATH))
base + geom_point(aes(color = SEX))
base + geom_point(aes(size = SCI, color = SEX))
paleta <- c("coral1", "cyan")
colors <- paleta[as.numeric(hsb$SEX)]
library(scatterplot3d)
scatterplot3d(hsb[, c('SCI', 'WRTG', 'MATH')], color = colors)
modelo1 = formula(MATH ~ WRTG)
modelo2 = formula(MATH ~ WRTG + SCI)
modelo3 = formula(MATH ~ WRTG + SCI + SEX)
# H1: el nivel de desempeño en escritura afecta el desempeño en matemáticas:
summary(lm(modelo1, data = hsb))
library(stargazer)
reg1 = lm(modelo1, data = hsb)
summary(reg1)
stargazer(reg1, type = "text", intercept.bottom = FALSE)
ggplot(hsb, aes(x = WRTG, y = MATH)) +
geom_point() +
geom_smooth(method = lm)
reg2 = lm(modelo2, data = hsb)
summary(reg2)
stargazer(reg2, type = "text", intercept.bottom = FALSE)
G  <- scatterplot3d(hsb[, c('SCI', 'WRTG', 'MATH')])
G$plane3d(reg2, draw_polygon = TRUE, draw_lines = FALSE)
tanova = anova(reg1, reg2)
tanova
stargazer(tanova,
type = 'text',
summary = F,
title = "Table de Análisis de Varianza")
reg3 = lm(modelo3, data = hsb)
summary(reg3)
colors <- paleta[as.numeric(hsb$SEX)]
G  <- scatterplot3d(hsb[, c('SCI', 'WRTG', 'MATH')], color = colors)
G$plane3d(reg2, draw_polygon = TRUE, draw_lines = FALSE)
stargazer(reg1, reg2, reg3, type = "text")
stargazer(reg1,
reg2,
reg3,
type = "text",
title = "Modelos planteadas",
digits = 2,
single.row = F,
no.space = F,
intercept.bottom = FALSE,
dep.var.caption = "Variable dependiente:",
dep.var.labels = "Desempeño en Matemáticas",
covariate.labels = c("Constante",
"Desempeño en Escritura",
"Desempeño en Ciencias",
"SEXO (mujer)"),
keep.stat = c("n", "adj.rsq", "ser"),
df = F,
notes.label = "Notas:")
library(sjPlot)
plot_models(reg1,
reg2,
reg3,
vline.color = "grey",
m.labels = c("Modelo 1", "Modelo 2", "Modelo 3"))
modelo1 = formula(MATH ~ WRTG)
modelo2 = formula(MATH ~ WRTG + SCI)
modelo3 = formula(MATH ~ WRTG + SCI + SEX)
# H1: el nivel de desempeño en escritura afecta el desempeño en matemáticas:
summary(lm(modelo1, data = hsb))
summary(lm(modelo1, data = hsb))
# H1: el nivel de desempeño en escritura afecta el desempeño en matemáticas:
library(stargazer)
reg1 = lm(modelo1, data = hsb)
#summary(reg1) #
stargazer(reg1, type = "text", intercept.bottom = FALSE)
# H1: el nivel de desempeño en escritura afecta el desempeño en matemáticas:
library(stargazer)
reg1 = lm(modelo1, data = hsb)
#summary(reg1)
stargazer(reg1, type = "text", intercept.bottom = FALSE)
ggplot(hsb, aes(x = WRTG, y = MATH)) +
geom_point() +
geom_smooth(method = lm)
$$  MATH= `r reg1$coefficients[1]` + `r reg1$coefficients[2]` \cdot WRTG + \epsilon$$
$$  MATH= `r reg1$coefficients[1]` + `r reg1$coefficients[2]` \cdot WRTG + \epsilon$$
reg2 = lm(modelo2, data = hsb)
stargazer(reg2, type = "html", intercept.bottom = FALSE)
reg2 = lm(modelo2, data = hsb)
stargazer(reg2, type = "text", intercept.bottom = FALSE)
library(stargazer)
reg1 = lm(modelo1, data = hsb)
#summary(reg1)
stargazer(reg1, type = "text", intercept.bottom = FALSE)
G  <- scatterplot3d(hsb[, c('SCI', 'WRTG', 'MATH')])
G$plane3d(reg2, draw_polygon = TRUE, draw_lines = FALSE)
tanova = anova(reg1, reg2)
tanova
stargazer(tanova,
type = 'text',
summary = F,
title = "Table de Análisis de Varianza")
tanova = anova(reg1, reg2)
tanova
stargazer(tanova,
type = 'html',
summary = F,
title = "Table de Análisis de Varianza")
tanova = anova(reg1, reg2)
tanova
stargazer(tanova,
type = 'text',
summary = F,
title = "Table de Análisis de Varianza")
library(rio)
organization='https://github.com/Estadistica-AnalisisPolitico'
repo='/DataFiles-estadistica/raw/main/'
file='hsb_ok.xlsx'
hsb=import(paste0(organization,repo,file))
str(hsb)
categoricals=c("SEX","RACE","SES","SCTYP","HSP","CAR")
hsb[,categoricals]=lapply(hsb[,categoricals], as.factor)
# nominales
hsb$SEX=factor(hsb$SEX,
levels=c(1,2),
labels=c("Male","Female"))
hsb$RACE=factor(hsb$RACE,
levels=c(1,2,3,4),
labels=c("Hispanic","Asian","Black","White"))
hsb$HSP=factor(hsb$HSP,
levels=c(1,2,3),labels=c("General","Academic","Vocational"))
hsb$SCTYP=factor(hsb$SCTYP,
levels=c(1,2),
labels=c("Public","Private"))
# a ordinal:
hsb$SES=ordered(hsb$SES,
levels=c(1,2,3),
labels=c("Low","Medium","High" ))
library(ggplot2)
base=ggplot(data=hsb, aes(x=WRTG, y=MATH))
scatter = base + geom_point()
scatter
f1=formula(~MATH + WRTG)
# camino parametrico
pearsonf1=cor.test(f1,data=hsb)[c('estimate','p.value')]
# camino no parametrico
spearmanf1=cor.test(f1,data=hsb,method='spearman')[c('estimate','p.value')]
library(scatterplot3d)
scatterplot3d(hsb[,c('SCI','WRTG','MATH')])
base=ggplot(data=hsb, aes(x=WRTG, y=MATH))
base + geom_point(aes(color = SCI))
f2=formula(~MATH+SCI)
# camino parametrico
pearsonf2=cor.test(f2,data=hsb)[c('estimate','p.value')]
# camino no parametrico
spearmanf2=cor.test(f2,data=hsb, method='spearman')[c('estimate','p.value')]
base=ggplot(data=hsb, aes(x=as.factor(SEX), y=MATH))
base + geom_boxplot(notch = T) +  geom_jitter(color="black", size=0.4, alpha=0.9)
library(ggpubr)
ggerrorplot(data=hsb, x = "SEX", y = "MATH")
library(ggplot2)
ggplot(hsb,aes(x=MATH)) +
geom_histogram(aes(y = ..density..),bins = 20, fill='green') +
stat_function(fun = dnorm, colour = "red",
args = list(mean = mean(hsb$MATH, na.rm = TRUE),
sd = sd(hsb$MATH, na.rm = TRUE))) +
facet_grid(~SEX) +
coord_flip()
# se sugiere normalidad si los puntos no se alejan de la diagonal.
library(ggpubr)
ggqqplot(data=hsb,x="MATH") + facet_grid(. ~ SEX)
library(knitr)
library(magrittr)
library(kableExtra)
f4=formula(MATH~SEX)
tablag= aggregate(f4, hsb,
FUN = function(x) {y <- shapiro.test(x); c(y$statistic, y$p.value)})
# para que se vea mejor:
shapiroTest=as.data.frame(tablag[,2])
names(shapiroTest)=c("W","Prob")
kable(cbind(tablag[1],shapiroTest))%>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F, position = "left")
tf4=t.test(f4,data=hsb)[c('estimate','p.value')]
wilcoxf4=wilcox.test(f4,data=hsb)['p.value']
base=ggplot(data=hsb, aes(x=WRTG, y=MATH))
base + geom_point(aes(color = SEX))
base + geom_point(aes(size = SCI, color=SEX))
base + geom_point(aes(color = SCI)) + facet_grid(~SEX)
paleta <- c("coral1","cyan" )
colors <- paleta[as.numeric(hsb$SEX)]
scatterplot3d(hsb[,c('SCI','WRTG','MATH')],color=colors)
modelo1=formula(MATH~WRTG)
modelo2=formula(MATH ~ WRTG + SCI)
modelo3= formula(MATH ~ WRTG + SCI + SEX)
library(stargazer)
reg1=lm(modelo1,data=hsb)
stargazer(reg1,type = "html",intercept.bottom = FALSE)
ggplot(hsb, aes(x=WRTG, y=MATH)) +
geom_point()+
geom_smooth(method=lm)
reg2=lm(modelo2,data=hsb)
stargazer(reg2,type = "html",intercept.bottom = FALSE)
library(scatterplot3d)
G  <- scatterplot3d(hsb[,c('SCI','WRTG','MATH')])
G$plane3d(reg2, draw_polygon = TRUE, draw_lines = FALSE)
tanova=anova(reg1,reg2)
stargazer(tanova,type = 'html',summary = F,title = "Table de Análisis de Varianza")
colors <- paleta[as.numeric(hsb$SEX)]
G  <- scatterplot3d(hsb[, c('SCI', 'WRTG', 'MATH')], color = colors)
G$plane3d(reg2, draw_polygon = TRUE, draw_lines = FALSE)
stargazer(reg1, reg2, reg3, type = "text")
stargazer(reg1,
reg2,
reg3,
type = "text",
title = "Modelos planteadas",
digits = 2,
single.row = F,
no.space = F,
intercept.bottom = FALSE,
dep.var.caption = "Variable dependiente:",
dep.var.labels = "Desempeño en Matemáticas",
covariate.labels = c("Constante",
"Desempeño en Escritura",
"Desempeño en Ciencias",
"SEXO (mujer)"),
keep.stat = c("n", "adj.rsq", "ser"),
df = F,
notes.label = "Notas:")
library(sjPlot)
plot_models(reg1,
reg2,
reg3,
vline.color = "grey",
m.labels = c("Modelo 1", "Modelo 2", "Modelo 3"))
G  <- scatterplot3d(hsb[, c('SCI', 'WRTG', 'MATH')])
G$plane3d(reg2, draw_polygon = TRUE, draw_lines = FALSE)
G  <- scatterplot3d(hsb[, c('SCI', 'WRTG', 'MATH')])
G$plane3d(reg2, draw_polygon = TRUE, draw_lines = FALSE)
# Gráfica de Correlación utilizando el código (`base`) de la primera gráfica:
base + geom_point(aes(color = SCI))
# Visualmente hay relación, pero no tenemos un coeficiente para medirlo:
#stargazer(reg1, reg2, reg3, type = "text") # Tabla básica
stargazer(reg1, reg2, reg3, type = "text", # Tabla fachera
title = "Modelos planteados",
digits = 2,
single.row = F,
no.space = F,
intercept.bottom = FALSE,
dep.var.caption = "Variable dependiente:",
dep.var.labels = "Desempeño en Matemáticas",
covariate.labels = c("Constante",
"Desempeño en Escritura",
"Desempeño en Ciencias",
"SEXO (mujer)"),
keep.stat = c("n", "adj.rsq", "ser"),
df = F,
notes.label = "Notas:")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(rio) # Importamos la data:
hsb = import("https://github.com/luccemhu/EDIT-Clases-E2/raw/main/SESI%C3%93N%201/hsb_ok.xlsx")
#str(hsb) # Tipos de datos reconocidos por R, ya que...
# Todo software lee la data a su modo y no siempre es la que se necesita.
# Por ello, debemos saber qué significa cada columna, su valor, etc.
# Para ello, es importante el codebook o diccionario de datos o metadata
# o el manual metodológico, etc. (Indicarlo en el trabajo).
categoricals = c("SEX", "RACE", "SES", "SCTYP", "HSP", "CAR")
hsb[, categoricals] = lapply(hsb[, categoricals], as.factor) # A factor
# nominales
hsb$SEX = factor(hsb$SEX,
levels = c(1, 2),
labels = c("Male", "Female"))
hsb$RACE = factor(hsb$RACE,
levels = c(1, 2, 3, 4),
labels = c("Hispanic", "Asian", "Black", "White"))
hsb$HSP = factor(hsb$HSP,
levels = c(1, 2, 3),
labels = c("General", "Academic", "Vocational"))
hsb$SCTYP = factor(hsb$SCTYP,
levels = c(1, 2),
labels = c("Public", "Private"))
# a ordinal:
hsb$SES = ordered(hsb$SES,
levels = c(1, 2, 3),
labels = c("Low", "Medium", "High"))
#hsb #Ahora veamos la data formateada
# Gráfica de correlación: (2 dimensiones)
library(ggplot2)
base = ggplot(data = hsb, aes(x = WRTG, y = MATH))
base + geom_point() # Hay aparente relación:
# Gráfica:
# Parece no haber diferencia sustantiva entre hombres y mujeres en
# cuanto a su desempeño en MATH:
base = ggplot(data = hsb, aes(x = SEX, y = MATH))
base + geom_boxplot(notch = T) +  geom_jitter(color = "black",
size = 0.4,
alpha = 0.9)
library(ggpubr)
ggerrorplot(data = hsb, x = "SEX", y = "MATH")
# Los histogramas de la data real tienen encima la curva normal que idealmente
# tendría esa data. La lejanía entre ellos, sugeriría no normalidad.
# Female distribución multimodal (puede afectar la diferencia de grupos)
ggplot(hsb, aes(x = MATH)) +
geom_histogram(aes(y = ..density..), bins = 20, fill = 'green') +
stat_function(fun = dnorm,
colour = "red",
args = list(mean = mean(hsb$MATH, na.rm = TRUE),
sd = sd(hsb$MATH, na.rm = TRUE))) +
facet_grid( ~ SEX) +
coord_flip()
# Se sugiere normalidad si los puntos no se alejan de la diagonal.
ggqqplot(data = hsb, x = "MATH") + facet_grid(. ~ SEX)
library(knitr)
library(kableExtra)
f3 = formula(MATH ~ SEX)
tablag = aggregate(f3,
hsb,
FUN = function(x) {y <- shapiro.test(x);
c(y$statistic, y$p.value)})
# Nota:
# Tstudent: se utiliza cuando hay normalidad
# Prob: es el pvalue y ambas son significativas (menores a 0.05)
# para Shapiro (parametrico). En suma, no hay normalidad:
# para que se vea mejor:
shapiroTest = as.data.frame(tablag[, 2])
names(shapiroTest) = c("W", "Prob")
kable(cbind(tablag[1], shapiroTest)) |>
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = F,
position = "left")
# Prueba t:
#tf3=t.test(f3,data=hsb)[c('estimate','p.value')]
#tf3
# Corresponde realizar la prueba no paramétrica:
wilcoxf3=wilcox.test(f3,data=hsb)['p.value']
# No se rechazaría la igualdad de valores medios
# (Mann-Whitney con p valor = 0.3085543).
#wilcoxf3
base = ggplot(data = hsb, aes(x = WRTG, y = MATH))
base + geom_point(aes(color = SEX))
base + geom_point(aes(size = SCI, color = SEX))
paleta <- c("coral1", "cyan")
colors <- paleta[as.numeric(hsb$SEX)]
library(scatterplot3d)
scatterplot3d(hsb[, c('SCI', 'WRTG', 'MATH')], color = colors)
modelo1 = formula(MATH ~ WRTG)
modelo2 = formula(MATH ~ WRTG + SCI)
modelo3 = formula(MATH ~ WRTG + SCI + SEX)
library(stargazer)
reg1 = lm(modelo1, data = hsb)
#summary(reg1)
stargazer(reg1, type = "text", intercept.bottom = FALSE)
reg2 = lm(modelo2, data = hsb)
stargazer(reg2, type = "text", intercept.bottom = FALSE)
tanova = anova(reg1, reg2)
tanova
stargazer(tanova,
type = 'text',
summary = F,
title = "Table de Análisis de Varianza")
reg3 = lm(modelo3, data = hsb)
stargazer(reg3, type = "text", intercept.bottom = FALSE)
#stargazer(reg1, reg2, reg3, type = "text") # Tabla básica
stargazer(reg1, reg2, reg3, type = "text", # Tabla fachera
title = "Modelos planteados",
digits = 2,
single.row = F,
no.space = F,
intercept.bottom = FALSE,
dep.var.caption = "Variable dependiente:",
dep.var.labels = "Desempeño en Matemáticas",
covariate.labels = c("Constante",
"Desempeño en Escritura",
"Desempeño en Ciencias",
"SEXO (mujer)"),
keep.stat = c("n", "adj.rsq", "ser"),
df = F,
notes.label = "Notas:")
library(sjPlot)
plot_models(reg1,
reg2,
reg3,
vline.color = "grey",
m.labels = c("Modelo 1", "Modelo 2", "Modelo 3"))
